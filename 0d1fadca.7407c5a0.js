(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(117)),o=n.p+"assets/images/new_folder-116eaaa89d8f0b26ebcad608867ff719.png",c={id:"customdockerimage",title:"Custom Docker Images 1"},l={unversionedId:"kd-img-dev/customdockerimage",id:"kd-img-dev/customdockerimage",isDocsHomePage:!1,title:"Custom Docker Images 1",description:"In this section, we will modify the docker image for the Ubuntu 18.04 application image.",source:"@site/docs/kd-img-dev/customdockerimage.md",slug:"/kd-img-dev/customdockerimage",permalink:"/mlops/docs/kd-img-dev/customdockerimage",editUrl:"https://github.com/nataliiaskopiuk/mlops/edit/master/docs/kd-img-dev/customdockerimage.md",version:"current",sidebar:"someSidebar",previous:{title:"Default Persistence Directories",permalink:"/mlops/docs/kd-img-dev/defaultpersistdirs"},next:{title:"Custom Docker Images 2",permalink:"/mlops/docs/kd-img-dev/customdockerimage2"}},u=[{value:"Modify Docker Image",id:"modify-docker-image",children:[]},{value:"Create Dockerfile",id:"create-dockerfile",children:[]},{value:"Run a local registry",id:"run-a-local-registry",children:[]},{value:"Build and Push image",id:"build-and-push-image",children:[]},{value:"Deploy the KD app image",id:"deploy-the-kd-app-image",children:[]},{value:"Deploy the KD Cluster",id:"deploy-the-kd-cluster",children:[]},{value:"Reference information",id:"reference-information",children:[]}],b={rightToc:u};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"In this section, we will modify the docker image for the Ubuntu 18.04 application image."),Object(i.b)("h2",{id:"modify-docker-image"},"Modify Docker Image"),Object(i.b)("p",null,"In this section, we modify the Ubuntu 18.04 application Docker image ",Object(i.b)("inlineCode",{parentName:"p"},"defaultImageRepoTag")," so that we can provide a custom Docker image. "),Object(i.b)("p",null,"Currently ",Object(i.b)("inlineCode",{parentName:"p"},"defaultImageRepoTag")," is set to ",Object(i.b)("inlineCode",{parentName:"p"},"bluedata/ubuntu18.04:1.1")),Object(i.b)("p",null,"Change ",Object(i.b)("inlineCode",{parentName:"p"},"defaultImageRepoTag")," to ",Object(i.b)("inlineCode",{parentName:"p"},"localhost:5000/myubuntu:1.0")," (we will create this image in the steps below)."),Object(i.b)("p",null,"The full json should now look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "apiVersion": "kubedirector.hpe.com/v1beta1",\n    "kind": "KubeDirectorApp",\n    "metadata": {\n        "name" : "ubuntu18x"\n    },\n\n    "spec" : {\n        "systemdRequired": true,\n        "defaultPersistDirs" : ["/home", "/var"],\n        "config": {\n            "roleServices": [\n                {\n                    "serviceIDs": [\n                        "ssh"\n                    ],\n                    "roleID": "vanilla_ubuntu"\n                }\n            ],\n            "selectedRoles": [\n                "vanilla_ubuntu"\n            ]\n        },\n        "label": {\n            "name": "Ubuntu 18.04",\n            "description": "Ubuntu 18.04 with no preinstalled apps"\n        },\n        "distroID": "bluedata/ubuntu18x",\n        "version": "1.1",\n        "configSchemaVersion": 8,\n        "services": [\n            {\n                "endpoint": {\n                    "port": 22,\n                    "isDashboard": false\n                },\n                "id": "ssh",\n                "label": {\n                    "name": "SSH"\n                }\n            }\n        ],\n        "defaultImageRepoTag": "localhost:5000/myubuntu:1.0",\n        "defaultConfigPackage": null,\n        "roles": [\n            {\n                "cardinality": "1+",\n                "id": "vanilla_ubuntu"\n            }\n        ]\n    }\n}\n')),Object(i.b)("h2",{id:"create-dockerfile"},"Create Dockerfile"),Object(i.b)("p",null,"We need to create a ",Object(i.b)("inlineCode",{parentName:"p"},"Dockerfile")," - let's create a ",Object(i.b)("strong",{parentName:"p"},"new folder")," for it inside ",Object(i.b)("inlineCode",{parentName:"p"},"deploy/example_catalog/")," called ",Object(i.b)("inlineCode",{parentName:"p"},"myubuntu"),":"),Object(i.b)("img",{src:o}),Object(i.b)("p",null,"Now create a Dockerfile in the folder ",Object(i.b)("inlineCode",{parentName:"p"},"myubuntu")," with the contents:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"FROM bluedata/ubuntu18.04:1.1\n\nRUN touch /modified_by_yourname\n")),Object(i.b)("p",null,"Change ",Object(i.b)("inlineCode",{parentName:"p"},"yourname")," to your name without spaces or special characters."),Object(i.b)("h2",{id:"run-a-local-registry"},"Run a local registry"),Object(i.b)("p",null,"To make development easier, we will deploy a local registry to push our custom image to:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker run -d -p 5000:5000 --restart=always --name registry registry:2\n")),Object(i.b)("h2",{id:"build-and-push-image"},"Build and Push image"),Object(i.b)("p",null,"In the terminal, change to the ",Object(i.b)("inlineCode",{parentName:"p"},"myubuntu")," folder and build your custom image and push it to the local registry:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker build --tag myubuntu:1.0 .\n\ndocker tag myubuntu:1.0 localhost:5000/myubuntu:1.0\n")),Object(i.b)("p",null,"Next we push the image to our local registry:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker push localhost:5000/myubuntu:1.0\n")),Object(i.b)("h2",{id:"deploy-the-kd-app-image"},"Deploy the KD app image"),Object(i.b)("p",null,"First ensure you aren't still running an Ubuntu KD clusters from the previous tutorial."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl delete kubedirectorclusters.kubedirector.hpe.com ubuntu18.04-persistent\n")),Object(i.b)("p",null,"Next undeploy the existing Ubuntu KD application image definition:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl delete kubedirectorapps.kubedirector.hpe.com ubuntu18x\n")),Object(i.b)("p",null,"Deploy the new Ubuntu KD application with your changes:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl apply -f ../cr-app-ubuntu18.04.json\n")),Object(i.b)("p",null,"Check the deployement was successful:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl get kubedirectorapps.kubedirector.hpe.com\n")),Object(i.b)("p",null,"You can see my image has only just been deployed:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"NAME                     AGE\n...\ntensorflow-gpu-jupyter   18h\ntraining-engine          18h\nubuntu18x                47s\n")),Object(i.b)("h2",{id:"deploy-the-kd-cluster"},"Deploy the KD Cluster"),Object(i.b)("p",null,"Next we can deploy the KD Cluster:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl apply -f ../../example_clusters/cr-cluster-ubuntu18.04-stor.yaml\n")),Object(i.b)("p",null,"We can then run ",Object(i.b)("inlineCode",{parentName:"p"},"ls /")," inside the cluster to see the file we created in our Docker image ",Object(i.b)("inlineCode",{parentName:"p"},"modified_by_yourname"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ kubectl exec -it kdss-w6jj7-0 -- /bin/bash\nroot@kdss-w6jj7-0:/# ls /\nbin  boot  dev  etc  home  lib  lib64  media  mnt  modified_by_yourname  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n")),Object(i.b)("h2",{id:"reference-information"},"Reference information"),Object(i.b)("p",null,"In this lesson we saw how ",Object(i.b)("inlineCode",{parentName:"p"},"defaultImageRepoTag")," works. "),Object(i.b)("p",null,"You can find the:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"KubeDirectorApp")," definition ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/bluek8s/kubedirector/wiki/KubeDirectorApp-Definition"}),"here")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"KubeDirectorApp.spec")," definition ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/bluek8s/kubedirector/wiki/KubeDirectorApp-Definition#kubedirectorappspec"}),"here"))),Object(i.b)("p",null,"If a KD Application has multiple roles (covered later), you can specify the ",Object(i.b)("inlineCode",{parentName:"p"},"imageRepoTag")," for each role:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"KubeDirectorApp.role")," definition ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/bluek8s/kubedirector/wiki/KubeDirectorApp-Definition#role"}),"here"))))}p.isMDXComponent=!0},117:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),b=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,m=p["".concat(o,".").concat(d)]||p[d]||s[d]||i;return n?r.a.createElement(m,c(c({ref:t},u),{},{components:n})):r.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);