(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{124:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var a=r(0),n=r.n(a);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),p=function(e){var t=n.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return r?n.a.createElement(d,l(l({ref:t},s),{},{components:r})):n.a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},75:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var a=r(2),n=r(6),o=(r(0),r(124)),i={id:"prometheus-tutorial",title:"Istio Prometheus"},l={unversionedId:"Kubeflow/k8s-admin-tutorials/prometheus-tutorial",id:"Kubeflow/k8s-admin-tutorials/prometheus-tutorial",isDocsHomePage:!1,title:"Istio Prometheus",description:"1. Check prometheus is created and available in istio-system namespace:",source:"@site/docs/Kubeflow/k8s-admin-tutorials/kubeflow-prometheus.md",slug:"/Kubeflow/k8s-admin-tutorials/prometheus-tutorial",permalink:"/mlops/docs/Kubeflow/k8s-admin-tutorials/prometheus-tutorial",editUrl:"https://github.com/nataliiaskopiuk/mlops/edit/master/docs/Kubeflow/k8s-admin-tutorials/kubeflow-prometheus.md",version:"current",sidebar:"someSidebar",previous:{title:"List of Kubeflow images",permalink:"/mlops/docs/Kubeflow/deployment/kf-images-list"},next:{title:"Istio Kiali",permalink:"/mlops/docs/Kubeflow/k8s-admin-tutorials/kiali-tutorial"}},c=[],s={rightToc:c};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Check prometheus is created and available in istio-system namespace: ")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"$ kubectl get svc/prometheus -n istio-system")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Create a tunnel for port 9090 via SSH: ")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"$ ssh -L 9090:localhost:9090 root@<Master Node>")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Enable port forwarding: ")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"$ kubectl port-forward svc/prometheus -n istio-system 9090:9090")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"After this you can access ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://127.0.0.1:9090/"}),"http://127.0.0.1:9090/")," from your local PC. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Navigate to Status > Targets and check that all targets are discovered and their statuses are monitored. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Navigate to Status > Service Discovery and check that all services are discovered and their statuses are monitored. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Navigate to Graph. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Choose any command you want and select it.  ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on \u2018Execute\u2019 button and observe a Graph tab."))))}p.isMDXComponent=!0}}]);