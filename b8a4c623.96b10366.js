(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=i,f=d["".concat(o,".").concat(u)]||d[u]||b[u]||r;return n?a.a.createElement(f,c(c({ref:t},s),{},{components:n})):a.a.createElement(f,c({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<r;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},164:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nifi_tile-b5230eebb2bf467aed140d3e305532c8.png"},165:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nifi_service-3c798416bd2a7ccd0f6a5468c799983f.png"},166:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nifi_link-c307db52e829b1d410ebb595311e6b80.png"},167:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nifi_canvas-fe8d87aeebbe72c5b47f447a91497f38.png"},168:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nifi_install-f9d79d5582df721aad6dd2aaa00ece27.png"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var i=n(2),a=n(6),r=(n(0),n(119)),o={id:"nifi",title:"Creating a NiFi Application"},c={unversionedId:"kd-img-dev/nifi",id:"kd-img-dev/nifi",isDocsHomePage:!1,title:"Creating a NiFi Application",description:"In this session we will create a basic Apache NiFi KD Application and deploy it to HPE Container Platform.",source:"@site/docs/kd-img-dev/nifi.md",slug:"/kd-img-dev/nifi",permalink:"/mlops/docs/kd-img-dev/nifi",editUrl:"https://github.com/nataliiaskopiuk/mlops/edit/master/docs/kd-img-dev/nifi.md",version:"current",sidebar:"someSidebar",previous:{title:"HPE Ezmeral CP (optional)",permalink:"/mlops/docs/kd-img-dev/hpecp_kd_app"},next:{title:"Secrets, ConfigMaps, Connections",permalink:"/mlops/docs/kd-img-dev/connections"}},l=[{value:"Functionality Walkthrough",id:"functionality-walkthrough",children:[]},{value:"Installing the NiFi App and provision a cluster",id:"installing-the-nifi-app-and-provision-a-cluster",children:[]},{value:"Application Walkthrough",id:"application-walkthrough",children:[]},{value:"Exercises",id:"exercises",children:[]}],s={rightToc:l};function p(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this session we will create a basic Apache NiFi KD Application and deploy it to HPE Container Platform."),Object(r.b)("p",null,"The application is intentionally kept simple to simplify learning.  Exercises will be suggested at the end of this lesson to add more features."),Object(r.b)("p",null,"We do NOT need the kubedirector-lab in this session."),Object(r.b)("h3",{id:"functionality-walkthrough"},"Functionality Walkthrough"),Object(r.b)("p",null,"After following this lesson you will have a NiFi tile in your list of Applications:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"NiFi Tile",src:n(164).default})),Object(r.b)("p",null,"If you select the Service Endpoints menu, you should see a http endpoint: "),Object(r.b)("p",null,Object(r.b)("img",{alt:"NiFi Service",src:n(165).default})),Object(r.b)("p",null,"If you select the link for the http endpoint, you should see a NiFi page:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"NiFi Link",src:n(166).default})),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you see a HTTP 503 error wait a few minutes for the NiFi service to start and then try again."))),Object(r.b)("p",null,"You should then see the NiFi canvas:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"NiFi Canvas",src:n(167).default})),Object(r.b)("h3",{id:"installing-the-nifi-app-and-provision-a-cluster"},"Installing the NiFi App and provision a cluster"),Object(r.b)("p",null,"The easiest way to deploy the application is to use the Terminal in a HPE Container Platform Kubernetes Tenant:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"NiFi Install",src:n(168).default})),Object(r.b)("p",null,"The steps are repeated below:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"git clone https://github.com/snowch/kubedirector-nifi\ncd kubedirector-nifi\n./apply_app_and_cluster.sh\n")),Object(r.b)("h3",{id:"application-walkthrough"},"Application Walkthrough"),Object(r.b)("p",null,"The application currently resides in ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/snowch/kubedirector-nifi"}),"kubedirector-nifi"),"."),Object(r.b)("p",null,"Inside the ",Object(r.b)("inlineCode",{parentName:"p"},"kubedirector-nifi")," git repository there are some files and some submodules (other git repositories):"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),".\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apply_app_and_cluster.sh\n\u251c\u2500\u2500 cr-app-nifi.json\n\u251c\u2500\u2500 cr-cluster-nifi.yaml\n\u251c\u2500\u2500 delete_app_and_cluster.sh\n\u251c\u2500\u2500 kubedirector-nifi-appconfig\n\u2502\xa0\xa0 \u251c\u2500\u2500 LICENSE\n\u2502\xa0\xa0 \u251c\u2500\u2500 README.md\n\u2502\xa0\xa0 \u2514\u2500\u2500 appconfig\n\u2502\xa0\xa0     \u2514\u2500\u2500 startscript\n\u2514\u2500\u2500 kubedirector-nifi-docker-image\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 LICENSE\n    \u2514\u2500\u2500 README.md\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"cr-app-nifi.json")," file contains the application definition.  The interesting parts of the application are:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'...\n"defaultImageRepoTag": "snowch/kubedirector-nifi:latest",\n"defaultConfigPackage": {\n   "packageURL": "https://github.com/snowch/kubedirector-nifi-appconfig/releases/download/refs%2Fheads%2Fmain/appconfig.tgz"\n},\n... \n')),Object(r.b)("p",null,"If was assumed that the docker image would not need to be changed very often when developing the application so it was put in its own git repository ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/snowch/kubedirector-nifi-docker-image"}),"kubedirector-nifi-docker-image"),".   The image has been pushed to docker hub using the tag: ",Object(r.b)("inlineCode",{parentName:"p"},"snowch/kubedirector-nifi:latest"),"."),Object(r.b)("p",null,"It was assumed that the config package could change quite a lot so this was also put in its own git repository ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/snowch/kubedirector-nifi-appconfig"}),"kubedirector-nifi-appconfig"),".  Every time the app config is modified a git release artifact is created which can be accessed over http."),Object(r.b)("p",null,"This approach allows anyone extending this application to easily change the appconfig and make it available over http."),Object(r.b)("h3",{id:"exercises"},"Exercises"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Follow the instructions ",Object(r.b)("a",Object(i.a)({parentName:"li"},{href:"https://pierrevillard.com/2016/08/13/apache-nifi-1-0-0-cluster-setup/"}),"here")," to support multiple nodes on the NiFi cluster.  You will need to use the configcli and respond to the lifecycle events."),Object(r.b)("li",{parentName:"ol"},"Add a new role which has a haproxy or nginx as a load balancer that uses the ",Object(r.b)("inlineCode",{parentName:"li"},"configcli")," to retrieve all of the nodes http endpoints and adds the endpoints to the routing configuration when a node is added or deleted.")))}p.isMDXComponent=!0}}]);