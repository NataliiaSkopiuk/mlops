(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{124:function(e,t,r){"use strict";r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),u=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,d=c["".concat(i,".").concat(m)]||c[m]||b[m]||o;return r?a.a.createElement(d,l(l({ref:t},p),{},{components:r})):a.a.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},138:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/files/kubeflow_tutorials_5.3-d2702c9f055fa88dc7dd4cb0330cd6f8.zip"},96:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(2),a=r(6),o=(r(0),r(124)),i={id:"gh-issue-sum-tutorial-p2",title:"GitHub Issue Summarization Example. Part 2"},l={unversionedId:"Kubeflow/user-tutorials/gh-issue-sum-tutorial-p2",id:"Kubeflow/user-tutorials/gh-issue-sum-tutorial-p2",isDocsHomePage:!1,title:"GitHub Issue Summarization Example. Part 2",description:"Serving Keras Model with Seldon",source:"@site/docs/Kubeflow/user-tutorials/kubeflow-github-issue-sum-serving.md",slug:"/Kubeflow/user-tutorials/gh-issue-sum-tutorial-p2",permalink:"/mlops/docs/Kubeflow/user-tutorials/gh-issue-sum-tutorial-p2",editUrl:"https://github.com/nataliiaskopiuk/mlops/edit/master/docs/Kubeflow/user-tutorials/kubeflow-github-issue-sum-serving.md",version:"current",sidebar:"someSidebar",previous:{title:"GitHub Issue Summarization Example. Part 1",permalink:"/mlops/docs/Kubeflow/user-tutorials/gh-issue-sum-tutorial-p1"},next:{title:"User Access to Data in HDFS",permalink:"/mlops/docs/Kubeflow/user-tutorials/hdfs-access"}},s=[{value:"Serving Keras Model with Seldon",id:"serving-keras-model-with-seldon",children:[]}],p={rightToc:s};function u(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"serving-keras-model-with-seldon"},"Serving Keras Model with Seldon"),Object(o.b)("p",null,"The following tutorial is based on the example ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/mapr/kubeflow-examples/blob/master/github_issue_summarization/03_serving_the_model.md"}),"here"),". "),Object(o.b)("p",null,"This tutorial serves the model trained in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/mlops/docs/Kubeflow/user-tutorials/gh-issue-sum-tutorial-p1"}),"GitHub Issue Summarization Example. Part 1")," tutorial. Run that tutorial if you have not done so already. "),Object(o.b)("p",null,"Upload the ",Object(o.b)("a",{target:"_blank",href:r(138).default},"kubeflow-tutorial.zip")," if you have not done that before."),Object(o.b)("p",null,"For this tutorial use already pushed image: "),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"idzikovsky/sandbox:seldon-issuesum")," "),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the notebook terminal apply seldon serving .yaml file: "),Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"$ kubectl apply -f seldon-issue-sum-deployment.yaml")))),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Check seldon deployment is created:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ kubectl get sdep \n\nNAME                  AGE \nissue-summarization   13s \n")))),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Check the pods are running: "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ kubectl get pods | grep classifier\n\nissue-summarization-example-0-classifier-86db87f7cf-9gwfn   2/2     Running   0          50s \n")))),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Connect to the Jupyter notebook and upload the file ",Object(o.b)("inlineCode",{parentName:"li"},"seldon-request.py")," to send a sample request to the model.")),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the Jupyter notebook terminal, install the following python dependencies: "),Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"pip install requests lxml --user")))),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Note:")," In case of using proxy you may need to run the following commands in the newly opened notebook terminal: "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ export http_proxy=<http_proxy_host> \n$ export https_proxy=<https_proxy_host> \n")),Object(o.b)("ol",{start:6},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Execute ",Object(o.b)("inlineCode",{parentName:"p"},"seldon-request.py")," script with the following options:"),Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"python seldon-request.py <ingressgateway_address> <login> <password> <user_namespace> <seldon_deployment_name>")))),Object(o.b)("p",null,"For example: \t "),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"python seldon-request.py http://istio-ingressgateway.istio-system.svc.cluster.local:80 dev1 12341234 dev1 issue-summarization"),"\t "),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"You can also connect directly to the container using seldon (",Object(o.b)("inlineCode",{parentName:"p"},"issue-summarization-example-classifier.<user_namespace>.svc.cluster.local"),") inside the notebook: "),Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},'$ curl -g http://issue-summarization-example-classifier.<user_namespace>.svc.cluster.local:9000/predict --data-urlencode \'json={"data":{"ndarray":[["try to stop flask from using multiple threads"]]}}\''),"\t "))),Object(o.b)("ol",{start:8},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The output should be similar to the following: "),Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},'{"data":{"names":["t:0"],"ndarray":[["add to support for"]]},"meta":{}}')))),Object(o.b)("ol",{start:9},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"To delete seldon deployment run: "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ kubectl get sdep\n$ kubectl delete sdep issue-summarization\n")))))}u.isMDXComponent=!0}}]);